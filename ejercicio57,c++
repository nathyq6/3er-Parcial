#include <iostream>
#include <vector>
#include <string>

using namespace std;

struct Usuario {
    int id;
    string nombre;
    string contrasena;
    string tipo;
};

vector<Usuario> usuarios;

void crearUsuario() {
    Usuario nuevoUsuario;
    cout << "Ingrese ID: ";
    cin >> nuevoUsuario.id;
    cout << "Ingrese Nombre: ";
    cin >> nuevoUsuario.nombre;
    cout << "Ingrese Contraseña: ";
    cin >> nuevoUsuario.contrasena;
    cout << "Ingrese Tipo (anonimo/administrador): ";
    cin >> nuevoUsuario.tipo;
    usuarios.push_back(nuevoUsuario);
    cout << "Usuario creado con éxito.\n";
}

void verUsuarios() {
    for (const auto& usuario : usuarios) {
        cout << "ID: " << usuario.id << ", Nombre: " << usuario.nombre 
             << ", Contraseña: " << usuario.contrasena 
             << ", Tipo: " << usuario.tipo << endl;
    }
}

void modificarUsuario() {
    int id;
    cout << "Ingrese el ID del usuario a modificar: ";
    cin >> id;

    for (auto& usuario : usuarios) {
        if (usuario.id == id) {
            cout << "Ingrese nuevo Nombre: ";
            cin >> usuario.nombre;
            cout << "Ingrese nueva Contraseña: ";
            cin >> usuario.contrasena;
            cout << "Ingrese nuevo Tipo (anonimo/administrador): ";
            cin >> usuario.tipo;
            cout << "Usuario modificado con éxito.\n";
            return;
        }
    }
    cout << "Usuario no encontrado.\n";
}

void eliminarUsuario() {
    int id;
    cout << "Ingrese el ID del usuario a eliminar: ";
    cin >> id;

    for (auto it = usuarios.begin(); it != usuarios.end(); ++it) {
        if (it->id == id) {
            usuarios.erase(it);
            cout << "Usuario eliminado con éxito.\n";
            return;
        }
    }
    cout << "Usuario no encontrado.\n";
}

void menuAnonimo() {
    int opcion;
    do {
        cout << "\nMenu Anonimo\n";
        cout << "1. Crear Usuario\n";
        cout << "2. Ver Usuarios\n";
        cout << "3. Salir\n";
        cout << "Seleccione una opción: ";
        cin >> opcion;

        switch (opcion) {
            case 1: crearUsuario(); break;
            case 2: verUsuarios(); break;
            case 3: cout << "Saliendo...\n"; break;
            default: cout << "Opción no válida.\n";
        }
    } while (opcion != 3);
}

void menuAdministrador() {
    int opcion;
    do {
        cout << "\nMenu Administrador\n";
        cout << "1. Crear Usuario\n";
        cout << "2. Ver Usuarios\n";
        cout << "3. Modificar Usuario\n";
        cout << "4. Eliminar Usuario\n";
        cout << "5. Salir\n";
        cout << "Seleccione una opción: ";
        cin >> opcion;

        switch (opcion) {
            case 1: crearUsuario(); break;
            case 2: verUsuarios(); break;
            case 3: modificarUsuario(); break;
            case 4: eliminarUsuario(); break;
            case 5: cout << "Saliendo...\n"; break;
            default: cout << "Opción no válida.\n";
        }
    } while (opcion != 5);
}

int main() {
    string tipoUsuario;
    cout << "Ingrese su tipo de usuario (anonimo/administrador): ";
    cin >> tipoUsuario;

    if (tipoUsuario == "anonimo") {
        menuAnonimo();
    } else if (tipoUsuario == "administrador") {
        menuAdministrador();
    } else {
        cout << "Tipo de usuario no válido.\n";
    }

    return 0;
}

